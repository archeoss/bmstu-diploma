services:
  # Jaeger
  jaeger-all-in-one:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"
      - "14268"
      - "14250"

  # Zipkin
  # zipkin-all-in-one:
  #   image: openzipkin/zipkin:latest
  #   ports:
  #     - "9411:9411"

  # Collector
  otel-collector:
    image: ${OTELCOL_IMG}
    command: ["--config=/etc/otel-collector-config.yaml", "${OTELCOL_ARGS}"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "1888:1888" # pprof extension
      - "8888:8888" # Prometheus metrics exposed by the collector
      - "8889:8889" # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317" # OTLP gRPC receiver
      - "55679:55679" # zpages extension
    depends_on:
      - jaeger-all-in-one
      # - zipkin-all-in-one

  # demo-server:
  #   build:
  #     dockerfile: ./dockerfiles/alpine/Dockerfile
  #     context: .
  #   restart: always
  #   volumes:
  #     - "./config.yaml:/config.yaml"
  #   ports:
  #     - "9000:9000"
  #   command: "--config-file /config.yaml"
  #   depends_on:
  #     - otel-collector

  prometheus:
    image: prom/prometheus:latest
    extra_hosts:
      - host.docker.internal:host-gateway
    volumes:
      - ./prometheus.yml:/prometheus/prometheus.yml
      - ./autometrics.rules.yml:/prometheus/autometrics.rules.yml
    ports:
      - "9090:9090"
    command:
      - "--enable-feature=exemplar-storage"
    # networks:
    #   - grafana

  grafana:
    image: grafana/grafana-enterprise:latest
    container_name: grafana
    ports:
      - "3000:3000"
    # networks:
    #   - grafana

  autometrics:
    image: autometrics/am-proxy
    environment:
      PROMETHEUS_URL: http://prometheus:9090
    ports:
      - "6789:6789"

networks:
  grafana:
