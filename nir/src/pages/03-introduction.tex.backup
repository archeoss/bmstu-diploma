\specsection{ВВЕДЕНИЕ}
% \addcontentsline{toc}{specsection}{Введение}

Компьютерная индустрия изменила курс в 2005 году, когда \texttt{Intel}, последовав примеру \texttt{IBM Power} 4~\cite{power4} и процессору \texttt{Niagara}~\cite{uddin2013advances} от \texttt{Sun Microsystems}, объявили, что их высокопроизводительные микропроцессоры отныне будут опираться на несколько процессоров или ядер~\cite{intel-multi}.
Новое в отрасли слово <<многоядерный>> отражает план удвоения количества стандартных ядер на матрицу с каждым поколением полупроводниковых процессов.
Многоядерный процессор поможет многопрограммным рабочим нагрузкам, которые содержат набор независимых последовательных задач~\cite{Asanović:EECS-2006-183}, однако вопросом остается как отдельные задачи станут быстрее.
Переход от последовательных вычислений к умеренно параллельным значительно усложняет разработку систем, не вознаграждая эти большие усилия значительно лучшим соотношением производительности к энергопотреблению~\cite{parallel}.

Следовательно, многоядерные процессоры едва ли являются идеальным решением.
Поскольку решить проблему параллелизма с помощью многоядерных решений, скорее всего, не удастся, то отсюда вытекает нужда в конкретном решении для параллельного аппаратного и программного обеспечения.
Однако главная гипотеза заключается не в том, что традиционные научные вычисления и строгие математические модели --- это будущее параллельных вычислений; она заключается в том, что совокупность знаний, полученных при создании программ, которые хорошо работают на массово параллельных компьютерах, может оказаться полезной при распараллеливании будущих приложений~\cite{lynchdistributed}.
Тем более, что многие приложения сегодня требуют обработку больших объемов данных, а не проведение сложных вычислений. 
Необработанная мощность процессора редко является ограничивающим фактором для подобного рода приложений --- более серьезными проблемами обычно являются объем данных, их сложность и скорость, с которой они изменяются.

\vspace{0.1cm}
\textbf{Цель работы} --- анализ методов распределенных вычислений в распределенных системах хранения информации.
\vspace{0.1cm}

Для достижения поставленной цели требуется решить следующие задачи: %FIXME
\begin{itemize}
    \item[$-$] Провести обзор существующих систем распределенных вычислений;
    \item[$-$] Провести анализ подходов к проектированию распределенных вычислений;
    \item[$-$] Cформулировать критерии сравнения методов распределенных вычислений;
    \item[$-$] Классифицировать существующие методы распределенных вычислений.
\end{itemize}

